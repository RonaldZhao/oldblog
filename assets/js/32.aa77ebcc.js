(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{170:function(t,s,e){"use strict";e.r(s);var i=e(0),r=Object(i.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("blockquote",[e("p",[t._v("课程链接: "),e("a",{attrs:{href:"https://www.nowcoder.com/courses/semester/algorithm",target:"_blank",rel:"noopener noreferrer"}},[t._v("直通BAT面试算法精讲课"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("专属优惠购课链接: "),e("a",{attrs:{href:"http://www.nowcoder.com/courses/1?coupon=Ae4r9VF",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.nowcoder.com/courses/1?coupon=Ae4r9VF"),e("OutboundLink")],1)])]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),e("p",[t._v("要求打印成:")]),t._v(" "),t._m(8),e("p",[t._v("即, 要在每一行输出二叉树对应的一行.")]),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("两个变量即可解决:")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),e("p",[t._v("序列化的方式:")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),e("p",[t._v("小结:")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"牛客网课程《直通bat面试算法精讲课》所涉及的代码即题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#牛客网课程《直通bat面试算法精讲课》所涉及的代码即题目","aria-hidden":"true"}},[this._v("#")]),this._v(" 牛客网课程《直通BAT面试算法精讲课》所涉及的代码即题目")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果要购买课程可以在购买的时候填一下这个优惠码, 立减"),s("strong",[this._v("10")]),this._v("元.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("优惠码: "),s("strong",[this._v("Ae4r9VF")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-1-二叉树打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-二叉树打印","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.1 二叉树打印")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"二叉树按层遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树按层遍历","aria-hidden":"true"}},[this._v("#")]),this._v(" 二叉树按层遍历")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("针对二叉树的宽度优先(也叫广度优先)遍历.")]),this._v(" "),s("li",[this._v("宽度优先遍历常使用队列结构.")]),this._v(" "),s("li",[this._v("面试中, 该类题目常对换行有所要求(如连同行号相关信息一起输出).")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如给定一颗二叉树的头结点"),s("code",[this._v("head")]),this._v(":")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("     1\n   /  \\\n  2    3\n /    / \\\n4    5   6\n    / \\\n   7   8\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("1\n2 3\n4 5 6\n7 8\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("难点: 知道如何该换行?")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("code",[this._v("last")]),this._v(": 表示正在打印的当前行的最右结点.")]),this._v(" "),s("li",[s("code",[this._v("nlast")]),this._v(": 表示下一行的最右结点.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设, 每一层都做从左到右的宽度优先遍历, 如果发现遍历到"),s("code",[this._v("last")]),this._v("结点, 说明该换行了. 换行之后只要令"),s("code",[this._v("last = nlast")]),this._v("就可以继续进行下一行的打印. 重复此过程直到打印完所有结点.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("此时问题便转换成了"),s("strong",[this._v("如何正确更新"),s("code",[this._v("last")]),this._v("和"),s("code",[this._v("nlast")]),this._v("结点")]),this._v("?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("答案: 只需要让"),s("code",[this._v("nlast")]),this._v("一直跟踪记录宽度优先队列中最新加入的结点即可. 这是因为最新加入队列的结点一定是目前发现的下一行的最右结点. 所以在当前行打印完毕的时候"),s("code",[this._v("nlast")]),this._v("一定是下一行的最右结点.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"二叉树的序列化和反序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的序列化和反序列化","aria-hidden":"true"}},[this._v("#")]),this._v(" 二叉树的序列化和反序列化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("二叉树 -> 字符串 (序列化)")]),this._v(" "),s("li",[this._v("字符串 -> 二叉树 (反序列化)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("根据先序遍历序列化")]),this._v(" "),s("li",[this._v("根据中序遍历序列化")]),this._v(" "),s("li",[this._v("根据后序遍历序列化")]),this._v(" "),s("li",[this._v("按层序列化")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("案例")]),this._v(" "),s("p",[this._v("给定一颗二叉树的头结点"),s("code",[this._v("head")]),this._v(", 并已知二叉树结点值的类型为32位整型, 设计一种二叉树序列化和反序列化的方案, 并用代码实现.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("选择用什么样的方式序列化, 就必须用什么样的方式反序列化.")]),this._v(" "),s("li",[this._v("一棵树序列化的结果是唯一的, 唯一的结果生成的二叉树也是唯一的.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-2-二叉树打印练习题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-二叉树打印练习题","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.2 二叉树打印练习题")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-3-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-字符串","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.3 字符串")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-4-两串旋转练习题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-两串旋转练习题","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4 两串旋转练习题")])}],!1,null,null,null);r.options.__file="README.md";s.default=r.exports}}]);
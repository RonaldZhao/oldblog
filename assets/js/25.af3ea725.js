(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{200:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"content"},[this._m(0),s("p"),this._m(1),s("p"),this._m(2),this._m(3),s("p",[this._v("快速排序是一种基于分治思想的排序算法，是一种不稳定排序。")]),this._m(4),s("p",[s("a",{attrs:{href:"http://yshblog.com/blog/170",target:"_blank",rel:"noopener noreferrer"}},[this._v("参考文章"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"常用算法的python实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用算法的python实现","aria-hidden":"true"}},[this._v("#")]),this._v(" 常用算法的Python实现")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#快速排序"}},[this._v("快速排序")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"快速排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速排序","aria-hidden":"true"}},[this._v("#")]),this._v(" 快速排序")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("基本思想")]),n("p",[t._v("将一个大数组按照一个"),n("strong",[t._v("基准数")]),t._v("分成左右两份，左边的部分都"),n("strong",[t._v("不大于")]),t._v("基准数，右边的部分都"),n("strong",[t._v("不小于")]),t._v("基准数；然后对这两份数组再分别应用快速排序，直到分解到每个数组中只剩两个排好序的数为止。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("# 快速排序")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("quick_sort")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 递归结束的条件")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" right"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nums\n \n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 选择第一个数作为基准数并记录在key中，方便最后写回")]),t._v("\n    key "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    lft "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" left  \n    rit "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" right\n \n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 遍历整个当前数组")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("# 从右侧开始筛选大于参考点的值，直到遇到")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right "),n("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            right "),n("span",{attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("# 这个位置的值先挪到左边")]),t._v("\n \n        "),n("span",{attrs:{class:"token comment"}},[t._v("# 从左边开始查找小于参考点的值")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right "),n("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" key"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            left "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("# 这个位置的值挪到右边")]),t._v("\n \n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 写回改成的值")]),t._v("\n    nums"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" key\n \n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 递归，并返回结果")]),t._v("\n    quick_sort"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" low"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{attrs:{class:"token comment"}},[t._v("# 递归左边部分")]),t._v("\n    quick_sort"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{attrs:{class:"token comment"}},[t._v("# 递归右边部分")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nums\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# 测试程序")]),t._v("\nnums "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" random"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sample"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token builtin"}},[t._v("range")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1000000")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("500000")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{attrs:{class:"token comment"}},[t._v("# 生成50万个100万范围内的无重复的随机数")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsorted_nums "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" quick_sort"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token builtin"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v("-")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sorted_nums"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,"50410ddc");s.default=o.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{72:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"常用算法的python实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用算法的python实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用算法的Python实现")]),a("p",[t._v("目录")]),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#快速排序"}},[t._v("快速排序")])])])]),a("p"),a("h2",{attrs:{id:"快速排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 快速排序")]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("基本思想")]),a("p",[t._v("将一个大数组按照一个"),a("strong",[t._v("基准数")]),t._v("分成左右两份，左边的部分都"),a("strong",[t._v("不大于")]),t._v("基准数，右边的部分都"),a("strong",[t._v("不小于")]),t._v("基准数；然后对这两份数组再分别应用快速排序，直到分解到每个数组中只剩两个排好序的数为止。")])]),a("p",[t._v("快速排序是一种基于分治思想的排序算法，是一种不稳定排序。")]),a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# 快速排序")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("quick_sort")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("# 递归结束的条件")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" right"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lists\n \n    "),a("span",{attrs:{class:"token comment"}},[t._v("# 选择第一个数作为基准数并记录在key中，方便最后写回")]),t._v("\n    key "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    lft "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" left  \n    rit "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" right\n \n    "),a("span",{attrs:{class:"token comment"}},[t._v("# 遍历整个当前数组")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("# 从右侧开始筛选大于参考点的值，直到遇到")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right "),a("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" key"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            right "),a("span",{attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# 这个位置的值先挪到左边")]),t._v("\n \n        "),a("span",{attrs:{class:"token comment"}},[t._v("# 从左边开始查找小于参考点的值")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" right "),a("span",{attrs:{class:"token operator"}},[t._v("and")]),t._v(" lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" key"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            left "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n        lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# 这个位置的值挪到右边")]),t._v("\n \n    "),a("span",{attrs:{class:"token comment"}},[t._v("# 写回改成的值")]),t._v("\n    lists"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" key\n \n    "),a("span",{attrs:{class:"token comment"}},[t._v("# 递归，并返回结果")]),t._v("\n    quick_sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lists"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" low"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("# 递归左边部分")]),t._v("\n    quick_sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lists"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" high"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("# 递归右边部分")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lists\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("# 测试程序")]),t._v("\nnums "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" random"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sample"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token builtin"}},[t._v("range")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1000000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("500000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# 生成50万个100万范围内的无重复的随机数")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("print")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsorted_nums "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" quick_sort"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("len")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("print")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sorted_nums"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[a("a",{attrs:{href:"http://yshblog.com/blog/170",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章")])])])}],!1,null,null,null);s.default=o.exports}}]);
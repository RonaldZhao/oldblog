(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{79:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"一文理解python多重继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一文理解python多重继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 一文理解Python多重继承")]),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#多重继承"}},[t._v("多重继承")]),s("ul",[s("li",[s("a",{attrs:{href:"#为什么要有继承？"}},[t._v("为什么要有继承？")])]),s("li",[s("a",{attrs:{href:"#又为什么要有多重继承？"}},[t._v("又为什么要有多重继承？")])]),s("li",[s("a",{attrs:{href:"#多重继承存在的问题"}},[t._v("多重继承存在的问题")])]),s("li",[s("a",{attrs:{href:"#钻石问题的解决办法"}},[t._v("钻石问题的解决办法")])])])]),s("li",[s("a",{attrs:{href:"#mixin"}},[t._v("MixIn")])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),s("h2",{attrs:{id:"多重继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重继承","aria-hidden":"true"}},[t._v("#")]),t._v(" 多重继承")]),s("h3",{attrs:{id:"为什么要有继承？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有继承？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么要有继承？")]),s("p",[t._v("答：有了继承，子类就可以延用并扩展父类的功能，实现"),s("strong",[t._v("代码的复用")]),t._v("，这是面向对象编程中一个重要的方式。")]),s("h3",{attrs:{id:"又为什么要有多重继承？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#又为什么要有多重继承？","aria-hidden":"true"}},[t._v("#")]),t._v(" 又为什么要有多重继承？")]),s("p",[t._v("答：有时候有的子类需要继承多个父类的功能，所以就需要有"),s("strong",[t._v("多重继承")]),t._v("了。比如蝙蝠不但属于哺乳类，又属于能飞的一类，所以蝙蝠可以直接继承两类的功能：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Mammal")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("object")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("kind")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slef"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I am a mammal.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Flyable")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("object")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("ability")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I can fly.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Bat")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mammal"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Flyable"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\nbat "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Bat"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbat"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("# 输出：I am a mammal.")]),t._v("\nbat"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ability"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("# 输出：I can fly.")]),t._v("\n")])]),s("h3",{attrs:{id:"多重继承存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重继承存在的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 多重继承存在的问题")]),s("p",[t._v("钻石继承(菱形继承)问题：不相关的祖先类实现了同名方法所引起的问题。如：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("A")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token builtin"}},[t._v("object")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("who_am_i")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I am A.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("B")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("who_am_i")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I am B.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("C")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("who_am_i")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I am C.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("D")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("who_am_i")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("print")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'I am D.'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nd1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nd1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("who_am_i"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("# 输出：I am D.")]),t._v("\n")])]),s("p",[t._v("但是如果将"),s("code",[t._v("D")]),t._v("改为：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("D")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),s("p",[t._v("再次调用"),s("code",[t._v("d1.who_am_i()")]),t._v("则会输出："),s("code",[t._v("I am B.")]),t._v("。")]),s("p",[t._v("所以问题来了，为什么会输出"),s("code",[t._v("I am B.")]),t._v("而不是"),s("code",[t._v("I am C.")]),t._v("呢？假如我想要调用的是"),s("code",[t._v("C")]),t._v("中的"),s("code",[t._v("who_am_i")]),t._v("呢？")]),s("p",[t._v("这就是"),s("strong",[t._v("钻石问题(菱形问题)")]),t._v("，因为其继承层次像一颗钻石(菱形)。")]),s("h3",{attrs:{id:"钻石问题的解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#钻石问题的解决办法","aria-hidden":"true"}},[t._v("#")]),t._v(" 钻石问题的解决办法")]),s("p",[t._v("为了解决这个问题，python使用了一种叫“方法解析顺序(Method Resolution Order, "),s("strong",[t._v("MRO")]),t._v(")”的方法，但是现在一般使用的是"),s("strong",[t._v("C3")]),t._v("算法。")]),s("h4",{attrs:{id:"mro"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mro","aria-hidden":"true"}},[t._v("#")]),t._v(" MRO")]),s("p",[t._v("MRO算法主要用于在多继承时判断所调用的属性的路径(即来自哪个类)。但是只用在"),s("strong",[t._v("python2.3")]),t._v("之前的版本，所以我们就不必再去深究它了。之后版本的python使用的都是"),s("strong",[t._v("C3")]),t._v("算法。")]),s("h4",{attrs:{id:"c3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c3","aria-hidden":"true"}},[t._v("#")]),t._v(" C3")]),s("h5",{attrs:{id:"为什么采用c3算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么采用c3算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么采用C3算法")]),s("p",[t._v("C3算法最早被提出是用于"),s("strong",[t._v("Lisp")]),t._v("的，应用在python中是为了解决MRO的"),s("strong",[t._v("不满足本地优先级")]),t._v("和"),s("strong",[t._v("单调性")]),t._v("的问题。")]),s("ul",[s("li",[t._v("本地优先级：指声明子类时父类的书写顺序，比如"),s("code",[t._v("C(A, B)")]),t._v("，如果访问"),s("code",[t._v("C")]),t._v("类对象的属性时，如果在本类中找不到，则应该根据父类的声明顺序，优先在"),s("code",[t._v("A")]),t._v("类中查找，然后再在"),s("code",[t._v("B")]),t._v("类中查找。")]),s("li",[t._v("单调性：如果在"),s("code",[t._v("C")]),t._v("的解析顺序中，"),s("code",[t._v("A")]),t._v("排在"),s("code",[t._v("B")]),t._v("的前面，那么在"),s("code",[t._v("C")]),t._v("的所有子类里，也必须(肯定)满足这个顺序。")])]),s("h5",{attrs:{id:"c3算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c3算法","aria-hidden":"true"}},[t._v("#")]),t._v(" C3算法")]),s("p",[t._v("判断MRO(方法解析顺序)要先确定一个线性序列，然后查找路径由序列中类的顺序决定。所以"),s("strong",[t._v("C3")]),t._v("算法就是生成这个线性序列。如：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("B")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),s("p",[t._v("则这时"),s("code",[t._v("B")]),t._v("的"),s("strong",[t._v("MRO序列")]),t._v("为："),s("code",[t._v("[B, A]")]),t._v("。")]),s("p",[t._v("如果：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("B")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A2"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A3"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),s("p",[t._v("则这时"),s("code",[t._v("B")]),t._v("的"),s("strong",[t._v("MRO序列")]),t._v("为："),s("code",[t._v("mro(B) = [B] + merge(mro(A1), mro(A2), mro(A3), ..., [A1, A2, A3, ...])")])]),s("p",[t._v("所以"),s("code",[t._v("merge")]),t._v("操作就是C3算法的核心。")]),s("h5",{attrs:{id:"merge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#merge","aria-hidden":"true"}},[t._v("#")]),t._v(" merge")]),s("p",[t._v("遍历执行"),s("code",[t._v("merge")]),t._v("操作的序列，如果序列的第一个元素在其他序列中也是第一个元素，或不在其他序列出现，则从所有执行"),s("code",[t._v("merge")]),t._v("操作的序列中删除这个元素，并将其合并到当前的"),s("code",[t._v("mro")]),t._v("中。")]),s("p",[t._v("执行"),s("code",[t._v("merge")]),t._v("操作后的序列，继续执行"),s("code",[t._v("merge")]),t._v("操作，知道其操作序列为空。")]),s("p",[t._v("如果操作序列无法为空，则说明不合法。")]),s("p",[t._v("举个栗子：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("A")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("B")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("C")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\ncalss D"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("E")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("F")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),s("p",[s("code",[t._v("A")]),t._v("、"),s("code",[t._v("B")]),t._v("、"),s("code",[t._v("C")]),t._v("都继承自同一个基类"),s("code",[t._v("O")]),t._v("，所以它们的"),s("code",[t._v("mro序列")]),t._v("分别为"),s("code",[t._v("[A, O]")]),t._v("、"),s("code",[t._v("[B, O]")]),t._v("、"),s("code",[t._v("[C, O]")]),t._v("。所以：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("所以将执行"),s("code",[t._v("merge")]),t._v("操作的序列为"),s("code",[t._v("[A, O], [B, O], [A, B]")]),t._v("：")]),s("p",[s("code",[t._v("A")]),t._v("时序列"),s("code",[t._v("[A, O]")]),t._v("中的第一个元素，而且在序列"),s("code",[t._v("[B, O]")]),t._v("中没有出现，在序列"),s("code",[t._v("[A, B]")]),t._v("中也是第一个元素，所以从"),s("code",[t._v("merge序列")]),t._v("中删除"),s("code",[t._v("A")]),t._v("并将其加入到当前"),s("code",[t._v("mro序列[D]")]),t._v("中：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("再执行"),s("code",[t._v("merge")]),t._v("操作，"),s("code",[t._v("O")]),t._v("时序列"),s("code",[t._v("[O]")]),t._v("中的第一个元素，但是它在序列"),s("code",[t._v("[B, O]")]),t._v("中出现了并且不是其第一个元素，忽略。继续查看序列"),s("code",[t._v("[B, O]")]),t._v("中的第一个元素"),s("code",[t._v("B")]),t._v("知其满足merge的条件，所以对其执行merge操作得：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("然后再执行一次merge操作即得："),s("code",[t._v("mro(D) = [D, A, B, O]")]),t._v("即为"),s("code",[t._v("D")]),t._v("的"),s("strong",[t._v("mro序列")]),t._v("。")]),s("p",[t._v("同理：")]),s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nmro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" mro"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" merge"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("F"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" D"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" A"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" E"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),s("p",[t._v("这就是"),s("strong",[t._v("C3算法")]),t._v("生成"),s("strong",[t._v("MRO序列")]),t._v("的核心步骤。")]),s("h2",{attrs:{id:"mixin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mixin","aria-hidden":"true"}},[t._v("#")]),t._v(" MixIn")]),s("p",[t._v("还没搞清楚，等我实际用到了切身体会一下再回来添加上。")]),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文章")]),s("ul",[s("li",[s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014318680104044a55f4a9dbf8452caf71e8dc68b75a18000",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰python教程")])]),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/33369eb6268e",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python多重继承方法解析顺序（MRO构建算法）")])]),s("li",[s("a",{attrs:{href:"http://www.cnblogs.com/fclbky/articles/4098181.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("多重继承的陷阱：钻石继承（菱形继承）问题 ")])]),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/a08c61abe895",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于MRO 和 C3算法")])]),s("li",[s("a",{attrs:{href:"http://www.bjhee.com/python-mixin.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于Python的Mixin模式")])]),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/933a22ac0eb7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python mixin模式")])])]),s("p",[t._v("觉得没看懂？欢迎来信反馈"),s("a",{attrs:{href:"mailto:zzgdata@gmail.com"}},[t._v("zzgdata@gmail.com")])])])}],!1,null,null,null);a.default=o.exports}}]);